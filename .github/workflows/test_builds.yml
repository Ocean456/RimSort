# Auto tests builds.
# Downloads artifact matching system, unzips them, finds the executable and attempts to run them.

name: Test Builds
on:
  workflow_call: null

permissions: {}

jobs:
  test:
    runs-on: windows-latest
    env:
      ARTIFACT_KEY_GLOB: "*Windows_x86_64*"
      ARTIFACT_KEY: "Windows_x86_64"
      EXPECTED_NAME: "RimSort.exe"
      platform: "Windows"
      arch: "x86_64"

    steps:
      - name: Download artifact from previous run
        if: ${{ github.event.inputs.run_id != null }}
        uses: actions/download-artifact@v4.3.0
        with:
          pattern: ${{ env.ARTIFACT_KEY_GLOB }}
          run-id: ${{ github.event.inputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact from current run
        if: ${{ github.event.inputs.run_id == null }}
        uses: actions/download-artifact@v4.3.0
        with:
          pattern: ${{ env.ARTIFACT_KEY_GLOB }}

      - name: Un-tar artifact
        run: |
          cd "$(find . -mindepth 1 -type d | head -n 1)"
          tar -xf ./*.tar
        shell: bash

      - name: Find executable
        id: find
        run: |
          FOUND=$(find . -type f -name ${{ env.EXPECTED_NAME }})
          echo "FOUND=$FOUND" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Check executable permissions
        continue-on-error: true
        run: |
          if [[ -x ${{ steps.find.outputs.FOUND }} ]]; then
            echo "Executable is executable"
          else
            echo "Executable is not executable. Attempting to continue"
            chmod +x ${{ steps.find.outputs.FOUND }}
            exit 1
          fi
        shell: bash

      - name: Run executable. Attempt to run the executable, waits 10 seconds, then kills it.
        run: |
          timeout 10 ${{ steps.find.outputs.FOUND }} || EXIT_CODE="$?"

          if [[ $EXIT_CODE == 124 ]]; then
            echo "Executable ran and timedout correctly"
          elif [[ $EXIT_CODE != 0 ]]; then
            echo "Executable failed with exit code $EXIT_CODE"
            exit "$EXIT_CODE"
          else
            echo "Executable ran successfully"
          fi
        shell: bash